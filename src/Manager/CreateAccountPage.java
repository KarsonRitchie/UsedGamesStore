/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Manager;

import Manager.ManagerView;
import Global.Methods;
import SQL.SQLLogin;
import java.awt.*;
import java.text.ParseException;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.*;

/**
 *
 * @author karso
 */
public class CreateAccountPage extends javax.swing.JFrame {

    ManagerView managerPage;
    
    //Now some lists to store errors in
    //Now only some are in need of a list, but i will create lsits for all for cosnsitency and to make things simpler to understand and use
    ArrayList<String> usernameErrors = new ArrayList<String>();
    ArrayList<String> passwordErrors = new ArrayList<String>();
    ArrayList<String> nameErrors = new ArrayList<String>();
    ArrayList<String> addressErrors = new ArrayList<String>();
    ArrayList<String> cityErrors = new ArrayList<String>();
    ArrayList<String> stateErrors = new ArrayList<String>();
    ArrayList<String> zipErrors = new ArrayList<String>();
    ArrayList<String> emailErrors = new ArrayList<String>();
    ArrayList<String> phoneErrors = new ArrayList<String>();
    ArrayList<String> questionErrors = new ArrayList<String>();
    
    
    //To help check validation we need to create an arraylist for the error buttons
        ArrayList<JLabel> errorMessages = new ArrayList<JLabel>();
    
        
    //array lists to hold the security questions and answers
    ArrayList<JComboBox> questions = new ArrayList<JComboBox>();
    ArrayList<JTextField> answers = new ArrayList<JTextField>();
        
    /**
     * Creates new form CreateAccountPage
     */
    public CreateAccountPage(ManagerView manager) {
        initComponents();

        managerPage = manager;

        //here we will create the lists for the security questions
        Thread createLists = new Thread(() -> {
            createQuestions();
        });

        createLists.start();
        
        //add error buttons to the list
        errorMessages.add(usernameErrorMessage);
        errorMessages.add(passwordErrorMessage);
        errorMessages.add(nameErrorMessage);
        errorMessages.add(addressErrorMessage);
        errorMessages.add(cityErrorMessage);
        errorMessages.add(stateErrorMessage);
        errorMessages.add(zipErrorMessage);
        errorMessages.add(emailErrorMessage);
        errorMessages.add(phoneErrorMessage);
        errorMessages.add(questionErrorMessage);
        
        //Add the security qwuestions and answers objects to the lists
        questions.add(q1);
        questions.add(q2);
        questions.add(q3);
        
        answers.add(a1);
        answers.add(a2);
        answers.add(a3);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createAccountPanel = new javax.swing.JPanel();
        container = new javax.swing.JLayeredPane();
        returnButton = new javax.swing.JButton();
        emailLabel = new javax.swing.JLabel();
        phoneField = new javax.swing.JTextField();
        usernameField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        cityLabel = new javax.swing.JLabel();
        line1Label = new javax.swing.JLabel();
        securityQuestionPanel = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        q1 = new javax.swing.JComboBox<>();
        a1 = new javax.swing.JTextField();
        a2 = new javax.swing.JTextField();
        q2 = new javax.swing.JComboBox<>();
        a3 = new javax.swing.JTextField();
        q3 = new javax.swing.JComboBox<>();
        questionErrorMessage = new javax.swing.JLabel();
        showLabel = new javax.swing.JLabel();
        line2Field = new javax.swing.JTextField();
        line3Label = new javax.swing.JLabel();
        line3Field = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        pageTitle = new javax.swing.JLabel();
        stateBox = new javax.swing.JComboBox<>();
        firstNameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        lastNameField = new javax.swing.JTextField();
        accountCreateButton = new javax.swing.JButton();
        firstNameField = new javax.swing.JTextField();
        zipLabel = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        stateLabel = new javax.swing.JLabel();
        cityField = new javax.swing.JTextField();
        usernameLabel = new javax.swing.JLabel();
        zipField = new javax.swing.JTextField();
        line2Label = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        line1Field = new javax.swing.JTextField();
        instructions1 = new javax.swing.JLabel();
        instructions2 = new javax.swing.JLabel();
        errorStatus = new javax.swing.JLabel();
        usernameErrorMessage = new javax.swing.JLabel();
        passwordErrorMessage = new javax.swing.JLabel();
        nameErrorMessage = new javax.swing.JLabel();
        addressErrorMessage = new javax.swing.JLabel();
        zipErrorMessage = new javax.swing.JLabel();
        cityErrorMessage = new javax.swing.JLabel();
        emailErrorMessage = new javax.swing.JLabel();
        phoneErrorMessage = new javax.swing.JLabel();
        stateErrorMessage = new javax.swing.JLabel();
        managerCheck = new javax.swing.JCheckBox();
        resetButton = new javax.swing.JButton();
        successStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Account Creation");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/UsedGamesLogo.png")).getImage());

        createAccountPanel.setBackground(new java.awt.Color(65, 146, 217));

        container.setBackground(new java.awt.Color(0, 75, 141));
        container.setForeground(new java.awt.Color(0, 75, 141));

        returnButton.setBackground(new java.awt.Color(0, 48, 90));
        returnButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        returnButton.setForeground(new java.awt.Color(255, 255, 255));
        returnButton.setText("Return");
        returnButton.setPreferredSize(new java.awt.Dimension(457, 23));
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        emailLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emailLabel.setText("Email");

        phoneField.setPreferredSize(new java.awt.Dimension(457, 22));
        phoneField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                phoneFieldKeyReleased(evt);
            }
        });

        usernameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernameFieldKeyReleased(evt);
            }
        });

        lastNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lastNameLabel.setText("Last Name *");

        cityLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cityLabel.setText("City *");

        line1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        line1Label.setLabelFor(usernameField);
        line1Label.setText("Address 1 *");

        securityQuestionPanel.setBackground(new java.awt.Color(122, 186, 242));

        title.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Security Questions *");
        title.setToolTipText("");

        q1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                questionsChanged(evt);
            }
        });

        a1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                answersKeyReleased(evt);
            }
        });

        a2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                answersKeyReleased(evt);
            }
        });

        q2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                questionsChanged(evt);
            }
        });

        a3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                answersKeyReleased(evt);
            }
        });

        q3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                questionsChanged(evt);
            }
        });

        questionErrorMessage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        questionErrorMessage.setForeground(java.awt.Color.red);
        questionErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        questionErrorMessage.setText("jLabel1");

        javax.swing.GroupLayout securityQuestionPanelLayout = new javax.swing.GroupLayout(securityQuestionPanel);
        securityQuestionPanel.setLayout(securityQuestionPanelLayout);
        securityQuestionPanelLayout.setHorizontalGroup(
            securityQuestionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(securityQuestionPanelLayout.createSequentialGroup()
                .addGroup(securityQuestionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(securityQuestionPanelLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(title)
                        .addGap(0, 81, Short.MAX_VALUE))
                    .addGroup(securityQuestionPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(securityQuestionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(a1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(q1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(securityQuestionPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(securityQuestionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(a2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(q2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(a3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(q3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(securityQuestionPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(questionErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        securityQuestionPanelLayout.setVerticalGroup(
            securityQuestionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(securityQuestionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addGap(18, 18, 18)
                .addComponent(q1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(q2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(q3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(a3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(questionErrorMessage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        showLabel.setText("Show");
        showLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                showLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                showLabelMouseExited(evt);
            }
        });

        line2Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                line2FieldActionPerformed(evt);
            }
        });

        line3Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        line3Label.setText("Address 3");

        passwordField.setEchoChar('*');
        passwordField.setPreferredSize(new java.awt.Dimension(457, 22));
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordFieldKeyReleased(evt);
            }
        });

        pageTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        pageTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pageTitle.setText("Create Account");

        stateBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N/A", "AE", "AK", "AL", "AP", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY" }));
        stateBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                stateBoxItemStateChanged(evt);
            }
        });

        firstNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        firstNameLabel.setText("First Name *");

        passwordLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        passwordLabel.setText("Password *");

        lastNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lastNameFieldKeyReleased(evt);
            }
        });

        accountCreateButton.setBackground(new java.awt.Color(0, 48, 90));
        accountCreateButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        accountCreateButton.setForeground(new java.awt.Color(255, 255, 255));
        accountCreateButton.setText("Create Account");
        accountCreateButton.setPreferredSize(new java.awt.Dimension(457, 23));
        accountCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountCreateButtonActionPerformed(evt);
            }
        });

        firstNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                firstNameFieldKeyReleased(evt);
            }
        });

        zipLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        zipLabel.setText("Zipcode *");

        emailField.setPreferredSize(new java.awt.Dimension(457, 22));
        emailField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailFieldKeyReleased(evt);
            }
        });

        stateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stateLabel.setText("State *");

        cityField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cityFieldKeyReleased(evt);
            }
        });

        usernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        usernameLabel.setLabelFor(usernameField);
        usernameLabel.setText("Username *");

        zipField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                zipFieldKeyReleased(evt);
            }
        });

        line2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        line2Label.setText("Address 2");

        phoneLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        phoneLabel.setText("Phone *");

        line1Field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                line1FieldKeyReleased(evt);
            }
        });

        instructions1.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        instructions1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        instructions1.setText("* means required");

        instructions2.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        instructions2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        instructions2.setText("For military addresses input them as normal and replace city and state with the appropiate values");

        errorStatus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        errorStatus.setForeground(java.awt.Color.red);
        errorStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        errorStatus.setText("An error occured, please try again");

        usernameErrorMessage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        usernameErrorMessage.setForeground(java.awt.Color.red);
        usernameErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        usernameErrorMessage.setText("jLabel1");

        passwordErrorMessage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        passwordErrorMessage.setForeground(java.awt.Color.red);
        passwordErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        passwordErrorMessage.setText("jLabel1");

        nameErrorMessage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        nameErrorMessage.setForeground(java.awt.Color.red);
        nameErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameErrorMessage.setText("jLabel1");

        addressErrorMessage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addressErrorMessage.setForeground(java.awt.Color.red);
        addressErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addressErrorMessage.setText("jLabel1");

        zipErrorMessage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        zipErrorMessage.setForeground(java.awt.Color.red);
        zipErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        zipErrorMessage.setText("jLabel1");

        cityErrorMessage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cityErrorMessage.setForeground(java.awt.Color.red);
        cityErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cityErrorMessage.setText("jLabel1");

        emailErrorMessage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        emailErrorMessage.setForeground(java.awt.Color.red);
        emailErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emailErrorMessage.setText("jLabel1");

        phoneErrorMessage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        phoneErrorMessage.setForeground(java.awt.Color.red);
        phoneErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        phoneErrorMessage.setText("jLabel1");

        stateErrorMessage.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        stateErrorMessage.setForeground(java.awt.Color.red);
        stateErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stateErrorMessage.setText("jLabel1");

        managerCheck.setBackground(new java.awt.Color(65, 146, 217));
        managerCheck.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        managerCheck.setText("Is Manager");

        resetButton.setBackground(new java.awt.Color(0, 48, 90));
        resetButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        resetButton.setForeground(new java.awt.Color(255, 255, 255));
        resetButton.setText("Reset Page");
        resetButton.setPreferredSize(new java.awt.Dimension(457, 23));
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        successStatus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        successStatus.setForeground(new java.awt.Color(0, 255, 0));
        successStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        successStatus.setText("User created successfully");

        container.setLayer(returnButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(emailLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(phoneField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(usernameField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(lastNameLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(cityLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(line1Label, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(securityQuestionPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(showLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(line2Field, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(line3Label, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(line3Field, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(passwordField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(pageTitle, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(stateBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(firstNameLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(passwordLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(lastNameField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(accountCreateButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(firstNameField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(zipLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(emailField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(stateLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(cityField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(usernameLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(zipField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(line2Label, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(phoneLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(line1Field, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(instructions1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(instructions2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(errorStatus, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(usernameErrorMessage, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(passwordErrorMessage, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(nameErrorMessage, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(addressErrorMessage, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(zipErrorMessage, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(cityErrorMessage, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(emailErrorMessage, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(phoneErrorMessage, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(stateErrorMessage, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(managerCheck, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(resetButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        container.setLayer(successStatus, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout containerLayout = new javax.swing.GroupLayout(container);
        container.setLayout(containerLayout);
        containerLayout.setHorizontalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, containerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(errorStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(instructions2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(instructions1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, containerLayout.createSequentialGroup()
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(containerLayout.createSequentialGroup()
                                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(containerLayout.createSequentialGroup()
                                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(line1Field, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                                            .addComponent(line1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(line2Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(line2Field, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(line3Field, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                            .addComponent(line3Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(containerLayout.createSequentialGroup()
                                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(firstNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                            .addComponent(firstNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lastNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                                            .addComponent(lastNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(nameErrorMessage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addressErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, containerLayout.createSequentialGroup()
                                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(cityField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cityLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(containerLayout.createSequentialGroup()
                                                .addComponent(stateBox, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18))
                                            .addGroup(containerLayout.createSequentialGroup()
                                                .addComponent(stateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(23, 23, 23)))
                                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(zipField, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                            .addComponent(zipLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(containerLayout.createSequentialGroup()
                                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(returnButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(accountCreateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(passwordErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(phoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(emailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(usernameErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(phoneField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(phoneErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(emailField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(emailErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(zipErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(stateErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cityErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, containerLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(managerCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(securityQuestionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pageTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(containerLayout.createSequentialGroup()
                        .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(showLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, containerLayout.createSequentialGroup()
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(usernameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(usernameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(successStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        containerLayout.setVerticalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pageTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(instructions1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(instructions2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(successStatus)
                .addGap(5, 5, 5)
                .addComponent(usernameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(containerLayout.createSequentialGroup()
                        .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usernameErrorMessage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordLabel)
                            .addComponent(showLabel))
                        .addGap(10, 10, 10)
                        .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passwordErrorMessage)
                        .addGap(2, 2, 2)
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstNameLabel)
                            .addComponent(lastNameLabel))
                        .addGap(13, 13, 13)
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameErrorMessage)
                        .addGap(11, 11, 11)
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(line1Label)
                            .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(line2Label)
                                .addComponent(line3Label)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(line1Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(line2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(line3Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(addressErrorMessage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cityLabel)
                            .addComponent(stateLabel)
                            .addComponent(zipLabel))
                        .addGap(13, 13, 13)
                        .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stateBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(zipField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cityErrorMessage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(stateErrorMessage)
                        .addGap(11, 11, 11)
                        .addComponent(zipErrorMessage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(emailErrorMessage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(phoneLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(phoneErrorMessage)
                        .addGap(10, 10, 10)
                        .addComponent(managerCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(accountCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(securityQuestionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout createAccountPanelLayout = new javax.swing.GroupLayout(createAccountPanel);
        createAccountPanel.setLayout(createAccountPanelLayout);
        createAccountPanelLayout.setHorizontalGroup(
            createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createAccountPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        createAccountPanelLayout.setVerticalGroup(
            createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createAccountPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createAccountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(createAccountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void line2FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_line2FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_line2FieldActionPerformed

    private void showLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showLabelMouseEntered
        passwordField.setEchoChar((char) 0);
    }//GEN-LAST:event_showLabelMouseEntered

    private void showLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showLabelMouseExited
        passwordField.setEchoChar('*');
    }//GEN-LAST:event_showLabelMouseExited

    private void accountCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountCreateButtonActionPerformed
        try {
            verifyInformation();
        } catch (ParseException ex) {
            Logger.getLogger(CreateAccountPage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_accountCreateButtonActionPerformed

    private void usernameFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameFieldKeyReleased
        //This and other fields wqe will be checked by a global method
        usernameErrors = Methods.checkUsername(usernameField.getText(), false, false);
        
        //Now check for the errors
        //This will happen in others to
        Methods.checkForErrors(usernameErrors, usernameErrorMessage);
        
    }//GEN-LAST:event_usernameFieldKeyReleased

    private void passwordFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyReleased
        passwordErrors = Methods.checkPassword(Methods.getPassword(passwordField.getPassword()));
        
        Methods.checkForErrors(passwordErrors, passwordErrorMessage);
    }//GEN-LAST:event_passwordFieldKeyReleased

    private void firstNameFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstNameFieldKeyReleased
        nameErrors = Methods.checkName(firstNameField.getText(), lastNameField.getText());
        
        Methods.checkForErrors(nameErrors, nameErrorMessage);
    }//GEN-LAST:event_firstNameFieldKeyReleased
 
    private void line1FieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_line1FieldKeyReleased
        addressErrors = Methods.checkAddress(line1Field.getText());
        
        Methods.checkForErrors(addressErrors, addressErrorMessage);
    }//GEN-LAST:event_line1FieldKeyReleased

    private void cityFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cityFieldKeyReleased
        cityErrors = Methods.checkCity(cityField.getText());
        
        Methods.checkForErrors(cityErrors, cityErrorMessage);
    }//GEN-LAST:event_cityFieldKeyReleased

    private void stateBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_stateBoxItemStateChanged
        stateErrors = Methods.checkState(stateBox.getSelectedIndex());
        
        Methods.checkForErrors(stateErrors, stateErrorMessage);
    }//GEN-LAST:event_stateBoxItemStateChanged

    private void zipFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zipFieldKeyReleased
        zipErrors = Methods.checkZip(zipField.getText());
        
        Methods.checkForErrors(zipErrors, zipErrorMessage);
    }//GEN-LAST:event_zipFieldKeyReleased

    private void emailFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailFieldKeyReleased
        emailErrors = Methods.checkEmail(emailField.getText());
        
        Methods.checkForErrors(emailErrors, emailErrorMessage);
    }//GEN-LAST:event_emailFieldKeyReleased

    private void phoneFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneFieldKeyReleased
        phoneErrors = Methods.checkPhone(phoneField.getText());
        
        Methods.checkForErrors(phoneErrors, phoneErrorMessage);
    }//GEN-LAST:event_phoneFieldKeyReleased

    private void lastNameFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lastNameFieldKeyReleased
        nameErrors = Methods.checkName(firstNameField.getText(), lastNameField.getText());
        
        Methods.checkForErrors(nameErrors, nameErrorMessage);
    }//GEN-LAST:event_lastNameFieldKeyReleased

    private void answersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_answersKeyReleased

        questionErrors = Methods.checkQuestions(questions, answers);
        
        Methods.checkForErrors(questionErrors, questionErrorMessage);
        
    }//GEN-LAST:event_answersKeyReleased

    private void questionsChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_questionsChanged
        questionErrors = Methods.checkQuestions(questions, answers);
        
        Methods.checkForErrors(questionErrors, questionErrorMessage);
    }//GEN-LAST:event_questionsChanged

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        this.dispose();
        try {
            managerPage.open();
        } catch (ParseException ex) {
            Logger.getLogger(CreateAccountPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_returnButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        open();
    }//GEN-LAST:event_resetButtonActionPerformed

    /**
     * //@param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CreateAccountPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CreateAccountPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CreateAccountPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CreateAccountPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//
//            }
//        });
//    }

    public void verifyInformation() throws ParseException {
        
        successStatus.setVisible(false);
        
        //Now we just we repeat the val;idation steps
        usernameErrors = Methods.checkUsername(usernameField.getText(), true, false);
        Methods.checkForErrors(usernameErrors, usernameErrorMessage);
        
        passwordErrors = Methods.checkPassword(Methods.getPassword(passwordField.getPassword()));
        Methods.checkForErrors(passwordErrors, passwordErrorMessage);
        
        nameErrors = Methods.checkName(firstNameField.getText(), lastNameField.getText());
        Methods.checkForErrors(nameErrors, nameErrorMessage);
        
        addressErrors = Methods.checkAddress(line1Field.getText());
        Methods.checkForErrors(addressErrors, addressErrorMessage);
        
        cityErrors = Methods.checkCity(cityField.getText());
        Methods.checkForErrors(cityErrors, cityErrorMessage);
        
        stateErrors = Methods.checkState(stateBox.getSelectedIndex());
        Methods.checkForErrors(stateErrors, stateErrorMessage);
        
        zipErrors = Methods.checkZip(zipField.getText());
        Methods.checkForErrors(zipErrors, zipErrorMessage);
        
        emailErrors = Methods.checkEmail(emailField.getText());
        Methods.checkForErrors(emailErrors, emailErrorMessage);

        phoneErrors = Methods.checkPhone(phoneField.getText());
        Methods.checkForErrors(phoneErrors, phoneErrorMessage);
        
        questionErrors = Methods.checkQuestions(questions, answers);
        Methods.checkForErrors(questionErrors, questionErrorMessage);
        
        //now that we have checked for validation lets see how many problems there are
        //actually we only need to see one
        //we will check if at least 1 error button is visible, and if one is we will not create an account
        
        //create a new boolean
        boolean hasErrors = false;
        
        for(JLabel message: errorMessages){
        
            if(message.isVisible()){
            
                hasErrors = true;
                break;
                
            }
        
        }
        
        //Now that we validated the information we will now either display the information
        if (hasErrors == false) {

            //since there are no errors we can create the account
            //Get password first
            String password = Methods.getPassword(passwordField.getPassword());
            
            //also set a string for the level
            String level = "";
            
            if(managerCheck.isSelected()){
            
                level = "Manager";
            
            }else{
            
                level = "Customer";
            
            }

            if(SQLLogin.createAccount(usernameField.getText(), password, firstNameField.getText(),
                    lastNameField.getText(), line1Field.getText(), line2Field.getText(), line3Field.getText(), cityField.getText(),
                    stateBox.getItemAt(stateBox.getSelectedIndex()), zipField.getText(), phoneField.getText(), emailField.getText(),
                    q1.getItemAt(q1.getSelectedIndex()), q2.getItemAt(q2.getSelectedIndex()), q3.getItemAt(q3.getSelectedIndex()),
                    a1.getText(), a2.getText(), a3.getText(), level).equals("Account Created")){
            
                errorStatus.setVisible(false);
                
//                managerPage.open();
//                this.dispose();

                //Instead of removing the page do something similair to the add games page
                //Just reset the page
                //since we dont have somethinmg like images we may need to change, we can just reset the page
                open();
                //also make sure to let the user know things went through successfully
                successStatus.setVisible(true);
                
            }else{
            
                errorStatus.setVisible(true);
                successStatus.setVisible(false);
            
            }

        }

    }

    public void createQuestions() {

        //Lets add the questions in the certain lists we need them
        q1.addItem("N/A");

        ArrayList<String> TempSet = SQLLogin.questionSet(1);
        q1.addItem(TempSet.get(0));
        q1.addItem(TempSet.get(1));
        q1.addItem(TempSet.get(2));

        q2.addItem("N/A");

        TempSet = SQLLogin.questionSet(2);
        q2.addItem(TempSet.get(0));
        q2.addItem(TempSet.get(1));
        q2.addItem(TempSet.get(2));

        q3.addItem("N/A");

        TempSet = SQLLogin.questionSet(3);
        q3.addItem(TempSet.get(0));
        q3.addItem(TempSet.get(1));
        q3.addItem(TempSet.get(2));
    }

    //A method to open the page and start it anew
    public void open() {

        //Any item box doesnt need to be erased, just set thier indexes back to to their default
        q1.setSelectedIndex(0);
        q2.setSelectedIndex(0);
        q3.setSelectedIndex(0);

        stateBox.setSelectedIndex(0);

        //Now make the text boxes blank
        usernameField.setText("");
        passwordField.setText("");
        firstNameField.setText("");
        lastNameField.setText("");
        line1Field.setText("");
        line2Field.setText("");
        line3Field.setText("");
        cityField.setText("");
        zipField.setText("");
        emailField.setText("");
        phoneField.setText("");

        a1.setText("");
        a2.setText("");
        a3.setText("");
        
        //Now make the error buttons invisible
        usernameErrorMessage.setVisible(false);
        passwordErrorMessage.setVisible(false);
        nameErrorMessage.setVisible(false);
        addressErrorMessage.setVisible(false);
        cityErrorMessage.setVisible(false);
        stateErrorMessage.setVisible(false);
        zipErrorMessage.setVisible(false);
        emailErrorMessage.setVisible(false);
        phoneErrorMessage.setVisible(false);
        questionErrorMessage.setVisible(false);
        
        //Make the error status invisible to
        errorStatus.setVisible(false);
        successStatus.setVisible(false);

        //Now set it visible
        this.setVisible(true);
        

    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a1;
    private javax.swing.JTextField a2;
    private javax.swing.JTextField a3;
    private javax.swing.JButton accountCreateButton;
    private javax.swing.JLabel addressErrorMessage;
    private javax.swing.JLabel cityErrorMessage;
    private javax.swing.JTextField cityField;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JLayeredPane container;
    private javax.swing.JPanel createAccountPanel;
    private javax.swing.JLabel emailErrorMessage;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel errorStatus;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JLabel instructions1;
    private javax.swing.JLabel instructions2;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField line1Field;
    private javax.swing.JLabel line1Label;
    private javax.swing.JTextField line2Field;
    private javax.swing.JLabel line2Label;
    private javax.swing.JTextField line3Field;
    private javax.swing.JLabel line3Label;
    private javax.swing.JCheckBox managerCheck;
    private javax.swing.JLabel nameErrorMessage;
    private javax.swing.JLabel pageTitle;
    private javax.swing.JLabel passwordErrorMessage;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel phoneErrorMessage;
    private javax.swing.JTextField phoneField;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JComboBox<String> q1;
    private javax.swing.JComboBox<String> q2;
    private javax.swing.JComboBox<String> q3;
    private javax.swing.JLabel questionErrorMessage;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton returnButton;
    private javax.swing.JPanel securityQuestionPanel;
    private javax.swing.JLabel showLabel;
    private javax.swing.JComboBox<String> stateBox;
    private javax.swing.JLabel stateErrorMessage;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JLabel successStatus;
    private javax.swing.JLabel title;
    private javax.swing.JLabel usernameErrorMessage;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel zipErrorMessage;
    private javax.swing.JTextField zipField;
    private javax.swing.JLabel zipLabel;
    // End of variables declaration//GEN-END:variables
}
